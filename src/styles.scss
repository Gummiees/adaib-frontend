// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;
@import "tailwindcss";

html, body { height: 100%; }

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

// Hide the Material Design form field subscript wrapper globally
// This removes the unnecessary bottom space from mat-select and other form fields
.mat-mdc-form-field-subscript-wrapper {
  display: none !important;
}

// Alternative approach: Set height to 0 if you want to keep the element but make it invisible
// .mat-mdc-form-field-subscript-wrapper {
//   height: 0 !important;
//   min-height: 0 !important;
//   overflow: hidden !important;
// }

// Content container with conditional max-width
.content-container {
  width: 100%;
  height: 100%;
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 1rem;
}

// Override for landing page - make it full width
.content-container:has(app-landing),
.content-container app-landing {
  max-width: none !important;
  margin: 0 !important;
  padding: 0 !important;
}

// Also target the parent container when landing page is present
.content-container:has(app-landing) {
  max-width: none !important;
  margin: 0 !important;
  padding: 0 !important;
}

@media (width >= 640px) {
  .content-container {
    padding: 0 1.5rem;
  }

  .content-container app-landing {
    padding: 0 !important;
  }
}

@media (width >= 1024px) {
  .content-container {
    padding: 0 2rem;
  }

  .content-container app-landing {
    padding: 0 !important;
  }
}
