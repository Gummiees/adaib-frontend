// Ensure the component host takes full height
:host(.landing-page) {
  display: block;
  width: 100%;
  height: 100%;
}

.landing-container {
  position: relative;
  width: 100%;
  height: 100%; /* Use full height of the flex container */
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.background-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  z-index: -1;
}

.content-overlay {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1.5rem;
  text-align: center;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
}

.content-overlay * {
  text-shadow: 2px 2px 4px rgb(0 0 0 / 70%);
}

/* Logo styling to prevent overflow */
.content-overlay img {
  max-width: 90%;

  /* Full height minus navbar (4rem) minus padding (1.5rem * 2) minus dynamic footer */
  max-height: calc(100vh - 4rem - 3rem - var(--footer-h, 0px));
  height: auto;
  width: auto;
  object-fit: contain;
}

/* Responsive adjustments */
@media screen and (width <= 640px) {
  :host(.landing-page) {
    height: 100% !important;
  }

  .content-overlay {
    padding: 1rem;
  }

  .content-overlay img {
    /* Fallback for browsers without svh */
    max-height: calc(100vh - 4rem - 2rem - var(--footer-h, 0px));

    /* Use svh for mobile to account for address bar */
    max-height: calc(100svh - 4rem - 2rem - var(--footer-h, 0px));
  }
}

/* Ensure full height on mobile devices */
@media screen and (height <= 600px) {
  .landing-container {
    min-height: 100%; /* Use full height of the flex container */
  }

  .content-overlay {
    padding: 1rem;
  }

  .content-overlay img {
    max-height: calc(100vh - 4rem - 2rem); /* Fallback for browsers without svh */
    max-height: calc(100svh - 4rem - 2rem); /* Use svh for mobile to account for address bar */
  }
}

/* High DPI display optimizations */
@media (resolution >= 192dpi) {
  .background-image {
    @supports (image-rendering: crisp-edges) {
      image-rendering: crisp-edges;
    }

    @supports (image-rendering: pixelated) {
      image-rendering: pixelated;
    }
  }
}
